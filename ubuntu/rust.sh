# BUILD RUST
# Adapting the Amazon Linux version to Ubuntu.
# The adaptations are completely untested on Amazon Linux.
# Original on Amazon Linux based on a script Generated by Bing AI.

# The build takes way too long on a micro.
# It runs out of disk on c6a.large unless we git clone at depth=1
# Then if we do:
# `rm -rf .rustup/toolchains/stable-x86_64-unknown-linux-gnu/share/doc/rust/html`
# while the build is running, to remove 643M, then we can finish the build with
# 460M to spare.

# Even then we get
#    Finished release [optimized] target(s) in 1m 55s
#warning: you have not made a `config.toml`
#help: consider running `./x.py setup` or copying `config.example.toml` by running `cp config.example.toml config.toml`
#note: this message was printed twice to make it more likely to be seen
#Build completed successfully in 0:20:30


source ~/scripts/util/detect-installer.sh
echo "Linux distribution: $BVT_DISTRO"
echo "Selected installer: $BVT_INSTALLER"
if [[ -z "${BVT_INSTALLER}" ]]; then
  echo "BVT_INSTALLER must be set to begin build."
  exit 255
fi


echo "***** BEGIN RUST BUILD SCRIPT $(date) *****"


sudo ${BVT_INSTALLER} update -y
sudo ${BVT_INSTALLER} install -y gcc openssl-devel libcurl-devel
#build-essential = needed to fix error: linker `cc` not found
sudo ${BVT_INSTALLER} install -y build-essential

curl https://sh.rustup.rs -sSf | sh -s -- -y
source $HOME/.cargo/env
rustup component add rust-src
git clone --depth=1 https://github.com/rust-lang/rust.git
cd rust
if [[ "${BVT_DISTRO}" == 'ubuntu' ]]; then
  # Just a guess -- is there an ubuntu-specific value here?
  TARGET=x86_64-unknown-linux-gnu
else
  TARGET=x86_64-unknown-linux-gnu
  fi
if [[ -z "${TARGET}" ]]; then
  echo "TARGET was not set correctly. Terminating."
  exit 255
fi
echo "Build target is ${TARGET}"
./x.py build --stage 1 --target=${TARGET}

# This next step is recommended by a message during the build, but I don't
# yet know how to suppress the interactive prompts appropriately.
# I answered e (dist), y (install git hook), y (update settings.json)
# but without really knowing why.
./x.py setup


